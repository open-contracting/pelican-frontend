name: CI
on: [push, pull_request]
env:
  BASEDIR: https://raw.githubusercontent.com/open-contracting/standard-maintenance-scripts/main
  OCDS_NOINDENT: 1
jobs:
  build_backend:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      # Check requirements.txt contains production requirements.
      - run: pip install -r requirements.txt
      - run: ./manage.py --help
      - run: curl -s -S --retry 3 $BASEDIR/tests/install.sh | bash -
      - run: pip install -r requirements_dev.txt
      - run: curl -s -S --retry 3 $BASEDIR/tests/script.sh | bash -
      - run: STANDARD_MAINTENANCE_SCRIPTS_IGNORE=gunicorn pytest /tmp/test_requirements.py

  build_frontend:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: frontend
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  docker:
    needs: [build_backend, build_frontend]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Get the tag name
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build django container image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend
          tags: |
            ghcr.io/open-contracting/pelican-frontend-django:latest
            ghcr.io/open-contracting/pelican-frontend-django:${{ env.TAG }}
      - name: Build vue container image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend
          tags: |
            ghcr.io/open-contracting/pelican-frontend-vue:latest
            ghcr.io/open-contracting/pelican-frontend-vue:${{ env.TAG }}
