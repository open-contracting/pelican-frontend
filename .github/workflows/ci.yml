name: CI
on: [push, pull_request]
env:
  BASEDIR: https://raw.githubusercontent.com/open-contracting/standard-maintenance-scripts/main
  OCDS_NOINDENT: 1
jobs:
  build_backend:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      # Don't install editable projects in the current working directory.
      # https://pip.pypa.io/en/latest/reference/pip_install/#install-src
      - run: pip install --src $GITHUB_WORKSPACE/../src -r requirements.txt
      # Check requirements.txt contains production requirements.
      - run: ./manage.py --help
      - run: curl -s -S --retry 3 $BASEDIR/tests/install.sh | bash -
      # Don't install editable projects in the current working directory.
      # https://pip.pypa.io/en/latest/reference/pip_install/#install-src
      - run: pip install --src $GITHUB_WORKSPACE/../src -r requirements_dev.txt
      - run: curl -s -S --retry 3 $BASEDIR/tests/script.sh | bash -
      - env:
          STANDARD_MAINTENANCE_SCRIPTS_IGNORE: tastypie
        run: pytest /tmp/test_requirements.py
      - name: Run Pelican backend migrations
        run: |
          curl -sS \
            https://raw.githubusercontent.com/open-contracting/pelican-backend/main/pelican/migrations/001_base.sql \
            https://raw.githubusercontent.com/open-contracting/pelican-backend/main/pelican/migrations/002_constraints.sql \
            | psql postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres -f -
      - name: Run checks and tests
        if: always()
        # Tastypie 0.14.3 has a missing migration.
        run: |
          ./manage.py migrate
          # ./manage.py makemigrations --check --dry-run
          ./manage.py check --fail-level WARNING
        env:
          # Tastypie 0.14.3 uses the deprecated django.conf.urls.url.
          PYTHONWARNINGS: error,ignore:::tastypie.resources
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres
          PELICAN_BACKEND_DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres
          DJANGO_SETTINGS_MODULE: dqt.settings

  build_frontend:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  docker:
    needs: [build_backend, build_frontend]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      # https://github.com/docker/login-action#github-container-registry
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # https://github.com/docker/setup-buildx-action#usage
      - uses: docker/setup-buildx-action@v1
      # https://github.com/docker/build-push-action#usage
      - uses: docker/build-push-action@v2
        with:
          push: true
          context: backend
          tags: |
            ghcr.io/${{ github.repository }}-django:latest
            ghcr.io/${{ github.repository }}-django:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend
          tags: |
            ghcr.io/${{ github.repository }}-vue:latest
            ghcr.io/${{ github.repository }}-vue:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
